[gd_scene load_steps=6 format=4 uid="uid://dai1dsqliea1x"]

[ext_resource type="Script" path="res://addons/path_mesh_instance_3d/path_mesh_instance_3d.gd" id="1_rk4yi"]

[sub_resource type="Shader" id="Shader_gc33k"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.3.stable.mono's StandardMaterial3D.

shader_type spatial;

render_mode unshaded;

const vec3 colors[7] = {
	vec3(1.0,1.0,1.0),
	vec3(1.0,0.0,0.0),
	vec3(0.0,1.0,0.0),
	vec3(0.0,0.0,1.0),
	vec3(1.0,1.0,0.0),
	vec3(1.0,0.0,1.0),
	vec3(0.0,1.0,1.0)
};

void fragment() {
	ALBEDO = mix(colors[int(floor(UV.x))%7], vec3(0,0,0), fract(UV.x));
	//ALBEDO = vec3(1.0,1.0,1.0) * clamp(UV.x, 0.0, 1.0);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_s3b30"]
render_priority = 0
shader = SubResource("Shader_gc33k")

[sub_resource type="ArrayMesh" id="ArrayMesh_ljndc"]
_surfaces = [{
"aabb": AABB(0, -0.0866026, -0.1, 3.0866, 3.1866, 3.1),
"attribute_data": PackedByteArray("AAAAAKuqqj4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAAAAAAAAAAAAAAAAq6oqPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq6oqPquqqj4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAAAAAAAAAAAAAAAAq6qqPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq6qqPquqqj4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAAAAAAAAAAAAAAAAAAAAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP6uqqj4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAAAAAAAAAAAAAAAAq6oqPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq6oqP6uqqj4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAAAAAAAAAAAAAAAAVVVVPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVVVVP6uqqj4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAP6uqqj4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAAAAAAAAAAAAAAAAAAAAAKuqKj8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAABAQAAAAAAAAAAAq6oqPquqKj8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAABAQAAAAAAAAAAAq6qqPquqKj8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAABAQAAAAAAAAAAAAAAAP6uqKj8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAABAQAAAAAAAAAAAq6oqP6uqKj8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAABAQAAAAAAAAAAAVVVVP6uqKj8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAABAQAAAAAAAAAAAAACAP6uqKj8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAABAQAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAABAQAAAQEAAAAAAq6oqPgAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAABAQAAAQEAAAAAAq6qqPgAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAABAQAAAQEAAAAAAAAAAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAABAQAAAQEAAAAAAq6oqPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAABAQAAAQEAAAAAAVVVVPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAABAQAAAQEAAAAAAAACAPwAAgD8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAAABAQAAAQEAAAAAA"),
"format": 34360258807,
"index_count": 138,
"index_data": PackedByteArray("AAABAAIAAAADAAEAAwAEAAEAAwAFAAQABQAGAAQABQAHAAYABwAIAAYABwAJAAgACQAKAAgACQALAAoACwAMAAoACwANAAwADgADAAAADgAPAAMADwAFAAMADwAQAAUAEAAHAAUAEAARAAcAEQAJAAcAEQASAAkAEgALAAkAEgATAAsAEwANAAsAEwAUAA0AFQAPAA4AFQAWAA8AFgAQAA8AFgAXABAAFwARABAAFwAYABEAGAASABEAGAAZABIAGQATABIAGQAaABMAGgAUABMAGgAbABQAGgAZABgAGAAXABYAGgAYABYAFgAVABsAGwAaABYAAQAKAAwADAACAAEAAQAGAAoAAQAEAAYABgAIAAoA"),
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 28,
"vertex_data": PackedByteArray("GnU6QLBcsT3NzEw9AAAAAGfm4SLNzMw9AAAAAKxcsT3NzEw9AABAQFbRwCLNzMw9AAAAAKxcsb3NzEw95opFQLBcsb3NzEw9AAAAAKxcsb3NzEy95opFQLBcsb3NzEy9AAAAAM1sqaPNzMy9AABAQACdkKPNzMy9AAAAAKxcsT3NzEy9GnU6QLBcsT3NzEy9AAAAAKxcsT3NzEw9GnU6QLBcsT3NzEw9G3U6QM3MPEDOzEw9AABAQJqZOUDOzMw95YpFQM3MPEDOzEw95YpFQDMzQ0DOzEy9AABAQGZmRkDOzMy9G3U6QDMzQ0DOzEy9G3U6QM3MPEDOzEw9G3U6QM3MPEAAAEBAAABAQJqZOUAAAEBA5YpFQM3MPEAAAEBA5YpFQDMzQ0AAAEBAAABAQGZmRkAAAEBAG3U6QDMzQ0AAAEBAG3U6QM3MPEAAAEBA6lIQpG2MuqIHQX6KAaXDq65iSsmXRV6uq3WrdRyTxoTyZOZJVBZRmRCk6lKKOoKcRDJRPK5VI9Du2xQtbYy6op0POx8DYOacqvWq9RyTxoQGJvTGZk65pxQt7tuKOoKcrmJKyZdFXq7qUhCkbYy6otkuYXDHoSXC/3//P6oqVJUl0cNgLWYBsGHw2a7HoSXC/7/+/6oqVJU7H9muLWYBsNkuYXDHoSXC5kklUappgtt+inZJhTI7lErJm2a9XNSuBqbuoHRPEbFhcCXRzjkWs7tNaZFHoEyl5kklUappgts=")
}]

[sub_resource type="Curve3D" id="Curve3D_gh5a4"]
_data = {
"points": PackedVector3Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3),
"tilts": PackedFloat32Array(0, 0, 0, 0)
}
point_count = 4

[node name="Node3D" type="Node3D"]

[node name="PathMeshInstance3D" type="MeshInstance3D" parent="." node_paths=PackedStringArray("path_3d")]
material_override = SubResource("ShaderMaterial_s3b30")
mesh = SubResource("ArrayMesh_ljndc")
script = ExtResource("1_rk4yi")
path_3d = NodePath("../Path3D")
width = 0.2

[node name="Path3D" type="Path3D" parent="."]
curve = SubResource("Curve3D_gh5a4")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.895277, 0.44551, 0, -0.44551, 0.895277, 0, 1.33636, 2.83585)
